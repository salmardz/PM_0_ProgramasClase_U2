Microsoft (R) Macro Assembler Version 14.16.27027.1	    10/12/21 08:50:27
P_39_switchAnidados.asm					     Page 1 - 1


				TITLE  

				;DESCRPICIÓN 
				;Objetivo: 
				;
				; Autore(s):
				;         Mtro. Alejandro Garcia
				;		  Su Nombre.! 
				;         

				; Semestre: 8vo Semestre ISC 
				;FIN DESCRIPCIÓN

				INCLUDE Irvine32.inc  
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
				; Área de Declaración de Variables
 00000000 42 69 65 6E 76	msj_p39_pregunta db "Bienvenido!! :D  ", 0 
	   65 6E 69 64 6F
	   21 21 20 3A 44
	   20 20 00

 00000012 31 30 20 2D 20	msj_R1_p39 db "10 - Refresco 1 - Precio : ", 0
	   52 65 66 72 65
	   73 63 6F 20 31
	   20 2D 20 50 72
	   65 63 69 6F 20
	   3A 20 00
 0000002E 31 32 20 2D 20	msj_R2_p39 db "12 - Refresco 2 - Precio : ", 0
	   52 65 66 72 65
	   73 63 6F 20 32
	   20 2D 20 50 72
	   65 63 69 6F 20
	   3A 20 00
 0000004A 31 35 20 2D 20	msj_R3_p39 db "15 - Refresco 3 - Precio : ", 0
	   52 65 66 72 65
	   73 63 6F 20 33
	   20 2D 20 50 72
	   65 63 69 6F 20
	   3A 20 00

				; 1.- Configuracion (Cod: 512)
				; 2.- Modo de Trabajo (Siempre)
				; 3.- Apagar (Cod: 200)

				;Cantidad de Refresco
 00000066 00000014		cantRefresco1_p39 dword 20
 0000006A 0000000F		cantRefresco2_p39 dword 15
 0000006E 0000000A		cantRefresco3_p39 dword 10

				;Precio de Refresco
 00000072 00000005		precioRefresco1_p39 dword 5
 00000076 00000008		precioRefresco2_p39 dword 8
 0000007A 0000000A		precioRefresco3_p39 dword 10


				;cantidad dineroMaquina
 0000007E 00000064		cantiDineroMaquina_p39 dword 100

				;Mensajes para Configuracion
 00000082 31 20 2D 20 4D	msjC_CantRef1_p39 db "1 - Modificar la cantidad del refresco 1", 0
	   6F 64 69 66 69
	   63 61 72 20 6C
	   61 20 63 61 6E
	   74 69 64 61 64
	   20 64 65 6C 20
	   72 65 66 72 65
	   73 63 6F 20 31
	   00
 000000AB 32 20 2D 20 4D	msjC_CantRef2_p39 db "2 - Modificar la cantidad del refresco 2", 0
	   6F 64 69 66 69
	   63 61 72 20 6C
	   61 20 63 61 6E
	   74 69 64 61 64
	   20 64 65 6C 20
	   72 65 66 72 65
	   73 63 6F 20 32
	   00
 000000D4 33 20 2D 20 4D	msjC_CantRef3_p39 db "3 - Modificar la cantidad del refresco 3", 0
	   6F 64 69 66 69
	   63 61 72 20 6C
	   61 20 63 61 6E
	   74 69 64 61 64
	   20 64 65 6C 20
	   72 65 66 72 65
	   73 63 6F 20 33
	   00

 000000FD 34 20 2D 20 4D	msjC_PrecioRef1_p39 db "4 - Modificar el precio del refresco 1", 0
	   6F 64 69 66 69
	   63 61 72 20 65
	   6C 20 70 72 65
	   63 69 6F 20 64
	   65 6C 20 72 65
	   66 72 65 73 63
	   6F 20 31 00
 00000124 35 20 2D 20 4D	msjC_PrecioRef2_p39 db "5 - Modificar el precio del refresco 2", 0
	   6F 64 69 66 69
	   63 61 72 20 65
	   6C 20 70 72 65
	   63 69 6F 20 64
	   65 6C 20 72 65
	   66 72 65 73 63
	   6F 20 32 00
 0000014B 36 20 2D 20 4D	msjC_PrecioRef3_p39 db "6 - Modificar el precio del refresco 3", 0
	   6F 64 69 66 69
	   63 61 72 20 65
	   6C 20 70 72 65
	   63 69 6F 20 64
	   65 6C 20 72 65
	   66 72 65 73 63
	   6F 20 33 00

 00000172 37 20 2D 20 4D	msjC_dineroMaquina_p39 db "7 - Modificar la cantidad de dinero de la maquina", 0
	   6F 64 69 66 69
	   63 61 72 20 6C
	   61 20 63 61 6E
	   74 69 64 61 64
	   20 64 65 20 64
	   69 6E 65 72 6F
	   20 64 65 20 6C
	   61 20 6D 61 71
	   75 69 6E 61 00

 000001A4 38 20 2D 20 53	msjC_Salir_p39 db "8 - Salir de Configuracion", 0
	   61 6C 69 72 20
	   64 65 20 43 6F
	   6E 66 69 67 75
	   72 61 63 69 6F
	   6E 00


 00000000			.code
					
 00000000				main39 PROC	
						;Lógica del Programa

 00000000					continuar: ;;;;;;INICIO DEL PROGRAMA

						;;;DESPLIGUE DE MENSAJES 

 00000000  BA 00000000 R			mov edx, offset msj_p39_pregunta
 00000005  E8 00000000 E			call writestring
 0000000A  E8 00000000 E			call crlf
 0000000F  E8 00000000 E			call crlf

 00000014  BA 00000012 R			mov edx, offset msj_R1_p39
 00000019  E8 00000000 E			call writestring                 ;MENSAJE DEL REFRESCO 1
 0000001E  B8 00000005				mov eax, 5                       ;COSTO DEL REFRESCO 1
 00000023  E8 00000000 E			call writedec
 00000028  E8 00000000 E			call crlf

 0000002D  BA 0000002E R			mov edx, offset msj_R2_p39
 00000032  E8 00000000 E			call writestring
 00000037  B8 0000000A				mov eax, 10 
 0000003C  E8 00000000 E			call writedec
 00000041  E8 00000000 E			call crlf

 00000046  BA 0000004A R			mov edx, offset msj_R3_p39
 0000004B  E8 00000000 E			call writestring
 00000050  B8 00000008				mov eax, 8
 00000055  E8 00000000 E			call writedec
 0000005A  E8 00000000 E			call crlf

						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 0000005F  E8 00000000 E			call readint  ; eax   ; OPCIÓN DEL USUARIO 

						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 00000064  83 F8 0A				cmp eax, 10
 00000067  75 0C				jnz compararRefresco2
							; es igual a 0
							;;;;; código necesario para vender el refresco 1.

 00000069  B8 00000001					mov eax, 1
 0000006E  E8 00000000 E				call writedec

							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000073  EB 8B					jmp continuar
 00000075					compararRefresco2:
 00000075  83 F8 0C					cmp eax, 12
 00000078  75 0F					jnz compararRefresco3

								;es igual a 0
								;;;;; código necesario para vender el refresco 2.

 0000007A  B8 00000002						mov eax, 2
 0000007F  E8 00000000 E					call writedec
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000084  E9 FFFFFF77					jmp continuar
 00000089					compararRefresco3:
 00000089  83 F8 0F					cmp eax, 15
 0000008C  75 0F					jnz compararConfiguracion

							;es igual a 0
							;;;;; código necesario para para vender el refresco 3.

 0000008E  B8 00000003					mov eax, 3
 00000093  E8 00000000 E				call writedec
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000098  E9 FFFFFF63					jmp continuar
 0000009D					compararConfiguracion:			
 0000009D  3D 00000200					cmp eax, 512
 000000A2  0F 85 0000014A				jnz compararApagar

							;es igual a 0
							;;;;; código necesario para comenzar la configuracion del sistema.

 000000A8  E8 00000000 E				call crlf
 000000AD  B8 00000200					mov eax, 512
 000000B2  E8 00000000 E				call writedec
 000000B7  E8 00000000 E				call crlf 

 000000BC						repiteCiclo:
							
 000000BC  E8 00000000 E				call crlf

 000000C1  BA 00000082 R				mov edx, offset msjC_CantRef1_p39
 000000C6  E8 00000000 E				call writestring
 000000CB  E8 00000000 E				call crlf
 000000D0  BA 000000AB R				mov edx, offset msjC_CantRef2_p39
 000000D5  E8 00000000 E				call writestring
 000000DA  E8 00000000 E				call crlf
 000000DF  BA 000000D4 R				mov edx, offset msjC_CantRef3_p39
 000000E4  E8 00000000 E				call writestring
 000000E9  E8 00000000 E				call crlf

 000000EE  BA 000000FD R				mov edx, offset msjC_PrecioRef1_p39
 000000F3  E8 00000000 E				call writestring
 000000F8  E8 00000000 E				call crlf
 000000FD  BA 00000124 R				mov edx, offset msjC_PrecioRef2_p39
 00000102  E8 00000000 E				call writestring
 00000107  E8 00000000 E				call crlf
 0000010C  BA 0000014B R				mov edx, offset msjC_PrecioRef3_p39
 00000111  E8 00000000 E				call writestring
 00000116  E8 00000000 E				call crlf

 0000011B  BA 00000172 R				mov edx, offset msjC_dineroMaquina_p39
 00000120  E8 00000000 E				call writestring
 00000125  E8 00000000 E				call crlf

 0000012A  BA 000001A4 R				mov edx, offset msjC_salir_p39
 0000012F  E8 00000000 E				call writestring
 00000134  E8 00000000 E				call crlf

							;;;;;;;;;;;;;;;;

 00000139  E8 00000000 E				call readint    ; lectura del valor del usuario para realizar la configuracion
							;se guarda en eax

 0000013E  E8 00000000 E				call crlf

 00000143  83 F8 01					cmp eax, 1
 00000146  75 0F					jnz compararCod2
								; aqui va el procedimiento cuando sea codigo 1
								
 00000148  B8 00000001						mov eax, 1
 0000014D  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000152  E9 FFFFFF65						jmp repiteCiclo
 00000157						compararCod2:
 00000157  83 F8 02					cmp eax, 2
 0000015A  75 0F					jnz compararCod3
								; aqui va el procedimiento cuando sea codigo 2
								
 0000015C  B8 00000002						mov eax, 2
 00000161  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000166  E9 FFFFFF51						jmp repiteCiclo
 0000016B						compararCod3:
 0000016B  83 F8 03					cmp eax, 3
 0000016E  75 0F					jnz compararCod4
								;aqui va el procedimiento cuando sea codigo 3
								
 00000170  B8 00000003						mov eax, 3
 00000175  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000017A  E9 FFFFFF3D						jmp repiteCiclo
 0000017F						compararCod4:
 0000017F  83 F8 04					cmp eax, 4
 00000182  75 0F					jnz compararCod5
								;aqui va el procedimiento cuando sea codigo 4
								
 00000184  B8 00000004						mov eax, 4
 00000189  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000018E  E9 FFFFFF29						jmp repiteCiclo
 00000193						compararCod5:
 00000193  83 F8 05					cmp eax, 5
 00000196  75 0F					jnz compararCod6
								;aqui va el procedimiento cuando sea codigo 5
								
 00000198  B8 00000005						mov eax, 5
 0000019D  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001A2  E9 FFFFFF15						jmp repiteCiclo
 000001A7						compararCod6:
 000001A7  83 F8 06					cmp eax, 6
 000001AA  75 0F					jnz compararCod7
								;aqui va el procedimiento cuando sea codigo 6
								
 000001AC  B8 00000006						mov eax, 6
 000001B1  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001B6  E9 FFFFFF01						jmp repiteCiclo
 000001BB						compararCod7:
 000001BB  83 F8 07					cmp eax, 7
 000001BE  75 0F					jnz compararCod8
								;aqui va el procedimiento cuando sea codigo 7
								
 000001C0  B8 00000007						mov eax, 7
 000001C5  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001CA  E9 FFFFFEED						jmp repiteCiclo
 000001CF						compararCod8:
 000001CF  83 F8 08					cmp eax, 8
 000001D2  75 0F					jnz noValido
								;aqui va el procedimiento cuando sea codigo 8
								
 000001D4  B8 00000008						mov eax, 8
 000001D9  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001DE  E9 FFFFFE1D						jmp continuar
 000001E3						noValido:
								;aqui va el procedimiento cuando sea un codigo no valido

								
 000001E3  B8 00015B38						mov eax, 88888
 000001E8  E8 00000000 E					call writedec
								;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 000001ED  E9 FFFFFECA						jmp repiteCiclo
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
							
 000001F2					compararApagar:
 000001F2  3D 000000C8					cmp eax, 200
 000001F7  75 0C					jnz codigoNoValido

							;es igual a 0
							;;;;; código necesario para comenzar el apagado del sistema.

 000001F9  B8 000000C8					mov eax, 200
 000001FE  E8 00000000 E				call writedec
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000203  EB 0F					jmp salir
 00000205					codigoNoValido:

 00000205  B8 0000270F					mov eax, 9999
 0000020A  E8 00000000 E				call writedec

							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000020F  E9 FFFFFDEC					jmp continuar


 00000214					salir:

						exit	
					
 0000021B				main39 ENDP
					
					END main39

					
Microsoft (R) Macro Assembler Version 14.16.27027.1	    10/12/21 08:50:27
P_39_switchAnidados.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001BF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000021B Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main39 . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000021B Public STDCALL
  continuar  . . . . . . . . . .	L Near	 00000000 _TEXT	
  compararRefresco2  . . . . . .	L Near	 00000075 _TEXT	
  compararRefresco3  . . . . . .	L Near	 00000089 _TEXT	
  compararConfiguracion  . . . .	L Near	 0000009D _TEXT	
  repiteCiclo  . . . . . . . . .	L Near	 000000BC _TEXT	
  compararCod2 . . . . . . . . .	L Near	 00000157 _TEXT	
  compararCod3 . . . . . . . . .	L Near	 0000016B _TEXT	
  compararCod4 . . . . . . . . .	L Near	 0000017F _TEXT	
  compararCod5 . . . . . . . . .	L Near	 00000193 _TEXT	
  compararCod6 . . . . . . . . .	L Near	 000001A7 _TEXT	
  compararCod7 . . . . . . . . .	L Near	 000001BB _TEXT	
  compararCod8 . . . . . . . . .	L Near	 000001CF _TEXT	
  noValido . . . . . . . . . . .	L Near	 000001E3 _TEXT	
  compararApagar . . . . . . . .	L Near	 000001F2 _TEXT	
  codigoNoValido . . . . . . . .	L Near	 00000205 _TEXT	
  salir  . . . . . . . . . . . .	L Near	 00000214 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cantRefresco1_p39  . . . . . . .	DWord	 00000066 _DATA	
cantRefresco2_p39  . . . . . . .	DWord	 0000006A _DATA	
cantRefresco3_p39  . . . . . . .	DWord	 0000006E _DATA	
cantiDineroMaquina_p39 . . . . .	DWord	 0000007E _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msjC_CantRef1_p39  . . . . . . .	Byte	 00000082 _DATA	
msjC_CantRef2_p39  . . . . . . .	Byte	 000000AB _DATA	
msjC_CantRef3_p39  . . . . . . .	Byte	 000000D4 _DATA	
msjC_PrecioRef1_p39  . . . . . .	Byte	 000000FD _DATA	
msjC_PrecioRef2_p39  . . . . . .	Byte	 00000124 _DATA	
msjC_PrecioRef3_p39  . . . . . .	Byte	 0000014B _DATA	
msjC_Salir_p39 . . . . . . . . .	Byte	 000001A4 _DATA	
msjC_dineroMaquina_p39 . . . . .	Byte	 00000172 _DATA	
msj_R1_p39 . . . . . . . . . . .	Byte	 00000012 _DATA	
msj_R2_p39 . . . . . . . . . . .	Byte	 0000002E _DATA	
msj_R3_p39 . . . . . . . . . . .	Byte	 0000004A _DATA	
msj_p39_pregunta . . . . . . . .	Byte	 00000000 _DATA	
precioRefresco1_p39  . . . . . .	DWord	 00000072 _DATA	
precioRefresco2_p39  . . . . . .	DWord	 00000076 _DATA	
precioRefresco3_p39  . . . . . .	DWord	 0000007A _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
